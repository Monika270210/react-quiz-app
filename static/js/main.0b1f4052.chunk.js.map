{"version":3,"sources":["logo.svg","Components/Answers/Answers.js","Components/Questions/Questions.js","Components/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Answers","props","array","Object","keys","answer","map","ans","className","correctAnswer","clickedAnswer","onClick","checkAnswer","disabled","console","log","Questions","question","Quiz","state","questions","1","2","3","4","5","answers","correctAnswers","clickedAns","score","step","view","setState","nextStep","viewResult","this","length","ProgressBar","variant","now","label","srOnly","Button","size","active","Table","striped","bordered","hover","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b1f4052.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './Answer.css';\r\n\r\nconst Answers = (props) => {\r\n    let array = Object.keys(props.answer).map((ans) => (\r\n        <li\r\n            className=\r\n            {\r\n                props.correctAnswer === ans ?\r\n                    'correct' :\r\n                    props.clickedAnswer === ans ?\r\n                        'incorrect' : ''\r\n            }\r\n            key={ans}\r\n            onClick={() => props.checkAnswer(ans)} >{props.answer[ans]}\r\n        </li>\r\n    ))\r\n    return (\r\n        <>\r\n            <ul disabled={props.clickedAnswer ? true : false} className=\"Answers\">\r\n                {console.log(props.clickedAnswer)}\r\n                {array}\r\n            </ul>\r\n            <div className=\"Response\" >\r\n                {\r\n                    props.correctAnswer ? 'Correct Answer!' :\r\n                        props.clickedAnswer ? 'Incorrect Answer!' : ''\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Answers","import React from 'react'\r\nimport './Question.css';\r\n\r\n const Questions = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>{props.question}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions","import React, { Component } from 'react'\r\nimport Answers from './Answers/Answers'\r\nimport Questions from './Questions/Questions'\r\nimport './QuizMain.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\n\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        questions: {\r\n            1: 'How is COVID-19 passed on?\"?',\r\n            2: 'What are the common symptoms of COVID-19?',\r\n            3: 'Can you always tell if someone has COVID-19? ',\r\n            4: 'Can washing your hands protect you from COVID-19? ',\r\n            5: 'When should fabric face masks be worn?'\r\n        },\r\n        answers: {\r\n            1: {\r\n                1: 'Through droplets that come from your mouth and nose when you cough or breathe out',\r\n                2: 'In sexual fluids, including semen, vaginal fluids or anal mucous',\r\n                3: 'By drinking unclean water',\r\n                4: 'All of the above'\r\n\r\n            },\r\n            2: {\r\n                1: 'A new and continuous cough',\r\n                2: 'Fever',\r\n                3: 'Tiredness',\r\n                4: 'All of the above'\r\n            },\r\n            3: {\r\n                1: 'No – not everyone with COVID-19 has symptoms',\r\n                2: 'Yes – it will be obvious, a person with COVID-19 coughs a lot',\r\n                3: 'Yes – you can tell just by where a person comes from, their race and ethnicity',\r\n                4: 'None of the above'\r\n            },\r\n            4: {\r\n                1: 'Yes – but only if you use a strong bleach',\r\n                2: 'Yes – normal soap and water or hand sanitizer is enough',\r\n                3: 'No – Washing your hands doesn’t stop COVID-19',\r\n                4: 'None of the above'\r\n            },\r\n            5: {\r\n                1: 'On public transport',\r\n                2: 'In confined or crowded spaces',\r\n                3: 'In small shops',\r\n                4: 'All of the above'\r\n            }\r\n        },\r\n        correctAnswers: {\r\n            1: '1',\r\n            2: '4',\r\n            3: '1',\r\n            4: '2',\r\n            5: '4'\r\n        },\r\n        clickedAns: {\r\n            1: '0',\r\n            2: '0',\r\n            3: '0',\r\n            4: '0',\r\n            5: '0'\r\n        },\r\n        correctAnswer: 0,\r\n        score: 0,\r\n        step: 1,\r\n        clickedAnswer: 0,\r\n        view: false\r\n    }\r\n\r\n\r\n    checkAnswer = (ans) => {\r\n        let { correctAnswers, step, score, clickedAnswer, correctAnswer, clickedAns } = this.state\r\n        console.log(correctAnswers[step])\r\n        clickedAns[step] = ans\r\n        console.log(clickedAns[step])\r\n        if (ans === correctAnswers[step]) {\r\n            this.setState({\r\n                score: score + 1,\r\n                correctAnswer: correctAnswers[step],\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                correctAnswer: 0\r\n            })\r\n        }\r\n        this.setState({\r\n            clickedAnswer: ans,\r\n            // clickedAns[step]: ans\r\n        })\r\n\r\n    }\r\n    nextStep = (step) => {\r\n        this.setState({\r\n            step: step + 1,\r\n            clickedAnswer: 0,\r\n            correctAnswer: 0\r\n        })\r\n    }\r\n    viewResult = () => {\r\n        this.setState({\r\n            view: true\r\n        })\r\n        console.log(this.state.clickedAns[1])\r\n        console.log(this.state.clickedAns[2])\r\n        console.log(this.state.clickedAns[3])\r\n    }\r\n    render() {\r\n        // let now = (step/Object.keys(questions).length)*100;\r\n        let now = 0\r\n        let { step, questions, answers, correctAnswer, clickedAnswer, score, clickedAns, view } = this.state\r\n        return (\r\n            <div className=\"Content\">\r\n\r\n                { step <= Object.keys(questions).length ?\r\n                    <>  <ProgressBar variant=\"warning\" className=\"progressBar\" now={(step / Object.keys(questions).length) * 100} label={`${now}%`} srOnly />\r\n                        <Questions\r\n                            question={questions[step]}\r\n                        />\r\n                        <Answers\r\n                            answer={answers[step]}\r\n                            checkAnswer={this.checkAnswer}  // another way check on google \r\n                            correctAnswer={correctAnswer}\r\n                            clickedAnswer={clickedAnswer}\r\n                        />\r\n                        <button\r\n                            className=\"NextStep\"\r\n                            disabled={\r\n                                clickedAnswer && Object.keys(questions).length >= step ? false : true\r\n                            }\r\n                            onClick={() => this.nextStep(step)}\r\n                        >\r\n                            Next\r\n               </button>\r\n                    </> :\r\n                    <div className=\"finalPage\">\r\n                        <h1>Congratulations!</h1> <h3>You have Successfully Completed the Quiz</h3>\r\n                        <p>You Scored   {score} / {Object.keys(questions).length}</p>\r\n                        <>\r\n                            <Button disabled={view ? true : false} className=\"resultButton\" variant=\"success\" size=\"lg\" onClick={this.viewResult} active >View Result</Button>\r\n                            {\r\n                                view ?\r\n                                    <div>\r\n                                        {\r\n\r\n                                            Object.keys(clickedAns).map((ans) => (\r\n                                                <div>\r\n                                                    {/* // clickedAns[ans]===this.state.correctAnswers[ans]? 'Correct Ans': 'Incorrect Ans' */}\r\n                                                    <Table striped bordered hover className=\"responseTable\">\r\n                                                        <thead>\r\n                                                            <tr className=\"thead\">\r\n                                                                <th>#</th>\r\n                                                                <th>Status</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"tbody\">\r\n                                                            {clickedAns[ans] === this.state.correctAnswers[ans] ?\r\n                                                                <tr>\r\n                                                                    <td>{ans}</td>\r\n                                                                    <td className=\"correct\">Correct Answer !</td>\r\n                                                                </tr> :\r\n                                                                <tr>\r\n                                                                    <td>{ans}</td>\r\n                                                                    <td className=\"incorrect\">Incorrect Answer!</td>\r\n                                                                </tr>\r\n                                                            }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                    : null\r\n                            }\r\n                        </>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Quiz from './Components/Quiz'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quiz/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}